@startuml
actor Usuario
participant "IU_Login" as Interfaz <<CI>>
participant "ControladorAutenticacion" as Controlador <<CC>>
participant "Usuario" as Entidad <<CE>>
participant "BaseDatos" as BD <<Database>>

Usuario -> Interfaz: Accede al formulario de login
activate Interfaz
Interfaz --> Usuario: Muestra formulario (email, contraseña)

group Autenticación exitosa
  Usuario -> Interfaz: Ingresa email y contraseña
  Interfaz -> Controlador: solicitarLogin(email, contraseña)
  activate Controlador

  Controlador -> Controlador: validarCampos(email, contraseña)
  alt Campos válidos
    Controlador -> Entidad: buscarUsuario(email)
    activate Entidad
    Entidad -> BD: SELECT * FROM usuarios WHERE email = ?
    activate BD
    BD --> Entidad: Datos del usuario (hash_contraseña)
    deactivate BD
    Entidad --> Controlador: Objeto Usuario
    deactivate Entidad

    Controlador -> Controlador: verificarContraseña(contraseña, hash)
    alt Contraseña correcta
      Controlador -> Controlador: generarTokenSesion()
      Controlador --> Interfaz: notificarÉxito(token)
      deactivate Controlador
      Interfaz --> Usuario: Redirige al dashboard
    else Contraseña incorrecta
      Controlador --> Interfaz: notificarError("Credenciales inválidas")
      deactivate Controlador
      Interfaz --> Usuario: Muestra error
    end
  else Campos inválidos
    Controlador --> Interfaz: notificarError("Email o contraseña vacíos")
    deactivate Controlador
    Interfaz --> Usuario: Resalta campos erróneos
  end
end

group Error de conexión
  Entidad -> BD: SELECT ...
  BD --> Entidad: Lanza SQLException
  Entidad --> Controlador: Propaga error
  Controlador --> Interfaz: notificarError("Error técnico")
  Interfaz --> Usuario: Muestra mensaje de error
end

deactivate Interfaz
@enduml